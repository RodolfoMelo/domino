<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4L/YHDAicWub4AAAAABJRU5ErkJggg==
</value>
  </data>
</root>